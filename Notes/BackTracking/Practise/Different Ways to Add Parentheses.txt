241. Different Ways to Add Parentheses

Given a string expression of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. You may return the answer in any order.

The test cases are generated such that the output values fit in a 32-bit integer and the number of different results does not exceed 10^4.

------------------------------------------------------------------------------------------



Recursion is function calling itself. So use it wisely.
Try to write clean recursion calls. 

Try to avoid for loops. As looping can also be done by recursive calls.

Let your recursive function handle the computations and avoid doing it yourself in the function scope.





class Solution {

    public List<Integer> diffWaysToCompute(String exp) {
        List<Integer> list = new ArrayList<>();
        
        for(int i=0;i<exp.length();i++)
        {
            char ch = exp.charAt(i);
            if(ch == '-' || ch == '+' || ch == '*')
            {
                List<Integer> left = diffWaysToCompute(exp.substring(0,i));
                List<Integer> right = diffWaysToCompute(exp.substring(i+1));
                for(int m : left)
                {
                    for(int n : right)
                    {
                        if(ch == '-')
                            list.add(m-n);
                        else if(ch == '+')
                            list.add(m+n);
                        else list.add(m*n);
                    }
                }
            }
        }
        if(list.size() == 0)
            list.add(Integer.valueOf(exp));
        return list;
    }
}