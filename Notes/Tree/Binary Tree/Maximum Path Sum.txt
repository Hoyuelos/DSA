124. Binary Tree Maximum Path Sum

A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.

The path sum of a path is the sum of the node's values in the path.

Given the root of a binary tree, return the maximum path sum of any non-empty path.



------------------------------------------------------------------------------------


class Solution {
    int res=Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        dfs(root);
        return res;
    }

    // it will return max path sum from this root node. (the root node is included in the path)
    public int dfs(TreeNode root){
        if(root==null)  return 0;
        if(root.left==null && root.right==null){
            res = Math.max(res, root.val);
            return root.val;
        }

        int left = dfs(root.left);
        int right = dfs(root.right);

        // if this root is the anchor node. (i.e. its left and right child are the part of path)
        int maxChild = Math.max(left, right);
        int sum = root.val;
        sum = Math.max(sum,root.val + maxChild);
        sum = Math.max(sum, root.val + left + right);
        res = Math.max(res, sum);

        return Math.max(root.val, maxChild + root.val);

    }
}
