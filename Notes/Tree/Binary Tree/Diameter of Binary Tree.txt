543. Diameter of Binary Tree

Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.

------------------------------------------------------------------------------------------



class Solution {
    int res=0;
    public int diameterOfBinaryTree(TreeNode root) {
        dfs(root);
        return res;
    }

    // returns the longest path length from the given root node to the leave node.
    //we are considering number of edges in the path length
    public int dfs(TreeNode root){  
        if(root==null)  return 0;
        if(root.left==null && root.right==null) return 0;

        int left = dfs(root.left);
        int right = dfs(root.right);

        // if current node is the anchor node (i.e. parent node from where path diverge)
        if(root.left!=null && root.right!=null){
            res = Math.max(res, left+right+2);
        }
        else{       // if either of the child is null. 
            res = Math.max(res, left+right+1);
        }

        return Math.max(left,right)+1;
    }
}