124. Binary Tree Maximum Path Sum

A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.

The path sum of a path is the sum of the node's values in the path.

Given the root of a binary tree, return the maximum path sum of any non-empty path.



https://leetcode.com/problems/binary-tree-maximum-path-sum/description/?envType=list&envId=puuzzmhm


------------------------------------------------------------------------------------------



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int res = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        dfs(root);
        return res;
    }

    public int dfs(TreeNode root){
        if(root == null)    return 0;

        int left = dfs(root.left);
        int right = dfs(root.right);
        int maxChild = Math.max(left,right);

        res = Math.max(res, left+right+root.val);
        res = Math.max(res, maxChild+root.val);
        res = Math.max(res, root.val);

        return Math.max(maxChild+root.val, root.val);
    }
    
}
