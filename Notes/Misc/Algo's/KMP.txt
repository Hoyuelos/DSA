// KMP pattern search in string.

// Time complexity - O(n+m)

class Solution {
    public int strStr(String str, String pat) {
                
        int n = str.length();
        int m = pat.length();
        int lps[] = new int[m];
        getLPS(lps, pat);
        
        int i=0,j=0;
        while(i<n){
            if(str.charAt(i) == pat.charAt(j)){
                i++; j++;
            }
            else{
                if(j==0)    i++;
                else        j = lps[j-1];                
            }
            if(j == m)  return i-m;
        }
        
        return -1;
    }
    
    void getLPS(int arr[], String st){
        int n = st.length();
        arr[0]=0;
        int prevLPS=0,i=1;
        while(i<n){
            if(st.charAt(i) == st.charAt(prevLPS)){
                arr[i] = prevLPS+1;
                prevLPS++;
                i++;
            }
            else{
                if(prevLPS==0){
                    arr[i]=0;
                    i++;
                }else{
                    prevLPS = arr[prevLPS-1];
                }
            }
        }
    }
}