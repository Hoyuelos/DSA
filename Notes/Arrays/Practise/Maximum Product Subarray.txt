152. Maximum Product Subarray

Given an integer array nums, find a 
subarray
 that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.


https://leetcode.com/problems/maximum-product-subarray/description/?envType=list&envId=puuzzmhm


------------------------------------------------------------------------------------------------



class Solution {
    public int maxProduct(int[] arr) {          
        int n = arr.length;
        int prod=1;
        for(int a:arr){
            prod = prod*a;
        }        

        int left[] = new int[n];        // prefix product   
        int right[] = new int[n];       // suffix product
        int t=1;
        for(int i=0;i<n;i++){
            t = t*arr[i];
            left[i] = t;
            if(arr[i]==0)   t=1;
        }

        t=1;
        for(int i=n-1;i>=0;i--){
            t = t*arr[i];
            right[i] = t;
            if(arr[i]==0)   t=1;
        }
        
        int max=Integer.MIN_VALUE;

        for(int i=0;i<n;i++){
            if(arr[i]<=0){
                if(i-1>=0)  max = Math.max(max, left[i-1]);
                if(i+1<n)   max = Math.max(max,  right[i+1]);
            }
        }

        return Math.max(max, prod);
    }

    
}

