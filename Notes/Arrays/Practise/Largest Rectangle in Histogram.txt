Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.


https://leetcode.com/problems/largest-rectangle-in-histogram/description/?envType=list&envId=puuzzmhm

------------------------------------------------------------------------------------



Using Monotonic stack



class Solution {
    public int largestRectangleArea(int[] arr) {
        int n = arr.length;
        if(n==1)    return arr[0];

        // monotonic stack - increasing
        int right[] = new int[n];       // next smaller element index on the right
        int left[] = new int[n];        // previous smaller element index on the left
        Stack<Integer> st = new Stack<>();

        right[n-1] = n;
        st.push(n-1);
        for(int i=n-2;i>=0;i--){
            while(st.size()>0 && arr[i]<=arr[st.peek()]) st.pop();
            if(st.size()>0) right[i] = st.peek();
            else            right[i] = n;
            st.push(i);
        }

        left[0]=-1;
        st = new Stack<>();
        st.push(0);
        for(int i=1;i<n;i++){
            while(st.size()>0 && arr[i]<=arr[st.peek()]) st.pop();
            if(st.size()>0) left[i] = st.peek();
            else            left[i] = -1;
            st.push(i);
        }

        int res=Integer.MIN_VALUE;

        for(int i=0;i<n;i++){
            // (r-1) - (l+1 ) + 1
            int width = (right[i]-1) - (left[i]+1) + 1;
            int area = arr[i] * width;

            res = Math.max(res, area);
        }

        return res;
    }
}